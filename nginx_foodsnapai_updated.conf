server {
    listen 443 ssl;
    server_name foodsnapai.food www.foodsnapai.food;

    ssl_certificate /etc/letsencrypt/live/foodsnapai.food/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/foodsnapai.food/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # SEO файлы без префикса /api (доступны с корня домена)
    location ~ ^/(sitemap\.xml|robots\.txt|manifest\.json|structured-data\.json)$ {
        proxy_pass http://localhost:8000$request_uri;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Добавляем правильные MIME типы
        location ~ \.xml$ {
            add_header Content-Type "application/xml; charset=utf-8";
        }
        location ~ \.txt$ {
            add_header Content-Type "text/plain; charset=utf-8";
        }
        location ~ \.json$ {
            add_header Content-Type "application/json; charset=utf-8";
        }
        
        # Кэширование для sitemap (обновляется раз в час)
        location = /sitemap.xml {
            proxy_cache_valid 200 1h;
            add_header Cache-Control "public, max-age=3600";
        }
        
        # Кэширование для robots.txt (обновляется раз в день)
        location = /robots.txt {
            proxy_cache_valid 200 24h;
            add_header Cache-Control "public, max-age=86400";
        }
    }

    # Бэкенд API (FastAPI)
    location /api/ {
        proxy_pass http://localhost:8000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Фронтенд (Next.js) - должен быть последним
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTP → HTTPS redirect
server {
    listen 80;
    server_name foodsnapai.food www.foodsnapai.food;

    if ($host = www.foodsnapai.food) {
        return 301 https://$host$request_uri;
    }

    if ($host = foodsnapai.food) {
        return 301 https://$host$request_uri;
    }

    return 404;
} 